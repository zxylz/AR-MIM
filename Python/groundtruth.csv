file,fileSet
arithmetic_analysis/in_static_equilibrium.py,"['web_programming/fetch_well_rx_price.py', 'arithmetic_analysis/gaussian_elimination.py', 'arithmetic_analysis/lu_decomposition.py', 'arithmetic_analysis/newton_forward_interpolation.py', 'arithmetic_analysis/newton_raphson.py', 'arithmetic_analysis/secant_method.py']"
web_programming/fetch_well_rx_price.py,['arithmetic_analysis/in_static_equilibrium.py']
data_structures/linked_list/__init__.py,"['data_structures/linked_list/circular_linked_list.py', 'data_structures/linked_list/has_loop.py', 'data_structures/linked_list/middle_element_of_linked_list.py', 'maths/pollard_rho.py', 'data_structures/linked_list/circular_linked_list.py', 'data_structures/linked_list/has_loop.py', 'data_structures/linked_list/middle_element_of_linked_list.py', 'data_structures/linked_list/skip_list.py']"
data_structures/linked_list/circular_linked_list.py,"['data_structures/linked_list/__init__.py', 'data_structures/linked_list/has_loop.py', 'data_structures/linked_list/middle_element_of_linked_list.py', 'maths/pollard_rho.py', 'data_structures/linked_list/__init__.py', 'data_structures/linked_list/has_loop.py', 'data_structures/linked_list/middle_element_of_linked_list.py', 'data_structures/linked_list/skip_list.py']"
data_structures/linked_list/has_loop.py,"['data_structures/linked_list/__init__.py', 'data_structures/linked_list/circular_linked_list.py', 'data_structures/linked_list/middle_element_of_linked_list.py', 'maths/pollard_rho.py', 'data_structures/linked_list/__init__.py', 'data_structures/linked_list/circular_linked_list.py', 'data_structures/linked_list/middle_element_of_linked_list.py', 'data_structures/linked_list/skip_list.py']"
data_structures/linked_list/middle_element_of_linked_list.py,"['data_structures/linked_list/__init__.py', 'data_structures/linked_list/circular_linked_list.py', 'data_structures/linked_list/has_loop.py', 'maths/pollard_rho.py', 'data_structures/linked_list/__init__.py', 'data_structures/linked_list/circular_linked_list.py', 'data_structures/linked_list/has_loop.py', 'data_structures/linked_list/skip_list.py']"
maths/pollard_rho.py,"['data_structures/linked_list/__init__.py', 'data_structures/linked_list/circular_linked_list.py', 'data_structures/linked_list/has_loop.py', 'data_structures/linked_list/middle_element_of_linked_list.py']"
searches/simulated_annealing.py,['searches/ternary_search.py']
searches/ternary_search.py,['searches/simulated_annealing.py']
graphs/breadth_first_search.py,"['graphs/breadth_first_search_2.py', 'graphs/check_cycle.py', 'graphs/greedy_min_vertex_cover.py', 'graphs/breadth_first_search_2.py', 'graphs/check_bipartite_graph_bfs.py', 'graphs/depth_first_search.py']"
graphs/breadth_first_search_2.py,"['graphs/breadth_first_search.py', 'graphs/check_cycle.py', 'graphs/greedy_min_vertex_cover.py', 'graphs/breadth_first_search.py', 'graphs/check_bipartite_graph_bfs.py']"
graphs/check_cycle.py,"['graphs/breadth_first_search.py', 'graphs/breadth_first_search_2.py', 'graphs/greedy_min_vertex_cover.py']"
graphs/greedy_min_vertex_cover.py,"['graphs/breadth_first_search.py', 'graphs/breadth_first_search_2.py', 'graphs/check_cycle.py']"
graphs/finding_bridges.py,['graphs/random_graph_generator.py']
graphs/random_graph_generator.py,['graphs/finding_bridges.py']
computer_vision/flip_augmentation.py,['computer_vision/mosaic_augmentation.py']
computer_vision/mosaic_augmentation.py,['computer_vision/flip_augmentation.py']
maths/average_mode.py,"['maths/gamma_recursive.py', 'maths/proth_number.py', 'maths/series/geometric_series.py', 'maths/series/p_series.py']"
maths/gamma_recursive.py,"['maths/average_mode.py', 'maths/proth_number.py', 'maths/series/geometric_series.py', 'maths/series/p_series.py']"
maths/proth_number.py,"['maths/average_mode.py', 'maths/gamma_recursive.py', 'maths/series/geometric_series.py', 'maths/series/p_series.py']"
maths/series/geometric_series.py,"['maths/average_mode.py', 'maths/gamma_recursive.py', 'maths/proth_number.py', 'maths/series/p_series.py']"
maths/series/p_series.py,"['maths/average_mode.py', 'maths/gamma_recursive.py', 'maths/proth_number.py', 'maths/series/geometric_series.py']"
project_euler/problem_205/__init__.py,['project_euler/problem_205/sol1.py']
project_euler/problem_205/sol1.py,['project_euler/problem_205/__init__.py']
other/lfu_cache.py,['other/lru_cache.py']
other/lru_cache.py,['other/lfu_cache.py']
project_euler/problem_045/sol1.py,['web_programming/get_user_tweets.py']
web_programming/get_user_tweets.py,['project_euler/problem_045/sol1.py']
ciphers/base16.py,"['ciphers/base64.py', 'ciphers/base85.py']"
ciphers/base64.py,"['ciphers/base16.py', 'ciphers/base85.py']"
ciphers/base85.py,"['ciphers/base16.py', 'ciphers/base64.py', 'ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py']"
fuzzy_logic/fuzzy_operations.py,['project_euler/problem_014/sol2.py']
project_euler/problem_014/sol2.py,['fuzzy_logic/fuzzy_operations.py']
linear_algebra/src/lib.py,"['linear_algebra/src/test_linear_algebra.py', 'linear_algebra/src/test_linear_algebra.py', 'linear_algebra/src/conjugate_gradient.py', 'linear_algebra/src/polynom_for_points.py', 'linear_algebra/src/power_iteration.py', 'linear_algebra/src/rayleigh_quotient.py', 'linear_algebra/src/test_linear_algebra.py', 'linear_algebra/src/transformations_2d.py']"
linear_algebra/src/test_linear_algebra.py,"['linear_algebra/src/lib.py', 'linear_algebra/src/lib.py', 'linear_algebra/src/conjugate_gradient.py', 'linear_algebra/src/lib.py', 'linear_algebra/src/polynom_for_points.py', 'linear_algebra/src/power_iteration.py', 'linear_algebra/src/rayleigh_quotient.py', 'linear_algebra/src/transformations_2d.py']"
data_structures/binary_tree/merge_two_binary_trees.py,"['data_structures/linked_list/skip_list.py', 'data_structures/binary_tree/binary_search_tree.py']"
data_structures/linked_list/skip_list.py,"['data_structures/binary_tree/merge_two_binary_trees.py', 'data_structures/linked_list/__init__.py', 'data_structures/linked_list/circular_linked_list.py', 'data_structures/linked_list/has_loop.py', 'data_structures/linked_list/middle_element_of_linked_list.py']"
machine_learning/local_weighted_learning/__init__.py,['machine_learning/local_weighted_learning/local_weighted_learning.py']
machine_learning/local_weighted_learning/local_weighted_learning.py,['machine_learning/local_weighted_learning/__init__.py']
financial/__init__.py,['financial/interest.py']
financial/interest.py,['financial/__init__.py']
data_structures/stacks/stack_with_doubly_linked_list.py,['data_structures/stacks/stack_with_singly_linked_list.py']
data_structures/stacks/stack_with_singly_linked_list.py,['data_structures/stacks/stack_with_doubly_linked_list.py']
project_euler/problem_493/__init__.py,['project_euler/problem_493/sol1.py']
project_euler/problem_493/sol1.py,['project_euler/problem_493/__init__.py']
compression/burrows_wheeler.py,"['compression/huffman.py', 'compression/lempel_ziv.py', 'compression/peak_signal_to_noise_ratio.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
compression/huffman.py,"['compression/burrows_wheeler.py', 'compression/lempel_ziv.py', 'compression/peak_signal_to_noise_ratio.py']"
compression/lempel_ziv.py,"['compression/burrows_wheeler.py', 'compression/huffman.py', 'compression/peak_signal_to_noise_ratio.py', 'neural_network/2_hidden_layers_neural_network.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
compression/peak_signal_to_noise_ratio.py,"['compression/burrows_wheeler.py', 'compression/huffman.py', 'compression/lempel_ziv.py']"
ciphers/decrypt_caesar_with_chi_squared.py,"['ciphers/polybius.py', 'ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py', 'data_structures/binary_tree/wavelet_tree.py', 'scripts/validate_solutions.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/polybius.py,['ciphers/decrypt_caesar_with_chi_squared.py']
data_structures/stacks/balanced_parentheses.py,"['data_structures/stacks/dijkstras_two_stack_algorithm.py', 'data_structures/stacks/infix_to_postfix_conversion.py', 'data_structures/stacks/stack.py']"
data_structures/stacks/dijkstras_two_stack_algorithm.py,"['data_structures/stacks/balanced_parentheses.py', 'data_structures/stacks/infix_to_postfix_conversion.py', 'data_structures/stacks/stack.py']"
data_structures/stacks/infix_to_postfix_conversion.py,"['data_structures/stacks/balanced_parentheses.py', 'data_structures/stacks/dijkstras_two_stack_algorithm.py', 'data_structures/stacks/stack.py', 'data_structures/stacks/__init__.py']"
data_structures/stacks/stack.py,"['data_structures/stacks/balanced_parentheses.py', 'data_structures/stacks/dijkstras_two_stack_algorithm.py', 'data_structures/stacks/infix_to_postfix_conversion.py', 'data_structures/stacks/evaluate_postfix_notations.py', 'data_structures/stacks/linked_stack.py', 'data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py']"
project_euler/problem_078/__init__.py,['project_euler/problem_078/sol1.py']
project_euler/problem_078/sol1.py,['project_euler/problem_078/__init__.py']
fractals/mandelbrot.py,"['graphs/bidirectional_breadth_first_search.py', 'maths/miller_rabin.py', 'web_programming/download_images_from_google_query.py', 'fractals/koch_snowflake.py', 'fractals/sierpinski_triangle.py']"
graphs/bidirectional_breadth_first_search.py,"['fractals/mandelbrot.py', 'maths/miller_rabin.py', 'web_programming/download_images_from_google_query.py']"
maths/miller_rabin.py,"['fractals/mandelbrot.py', 'graphs/bidirectional_breadth_first_search.py', 'web_programming/download_images_from_google_query.py']"
web_programming/download_images_from_google_query.py,"['fractals/mandelbrot.py', 'graphs/bidirectional_breadth_first_search.py', 'maths/miller_rabin.py']"
ciphers/baconian_cipher.py,['strings/join.py']
strings/join.py,['ciphers/baconian_cipher.py']
data_structures/binary_tree/binary_search_tree.py,"['data_structures/binary_tree/merge_two_binary_trees.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py']"
maths/factorial_iterative.py,['project_euler/problem_015/sol1.py']
project_euler/problem_015/sol1.py,['maths/factorial_iterative.py']
project_euler/problem_686/__init__.py,['project_euler/problem_686/sol1.py']
project_euler/problem_686/sol1.py,['project_euler/problem_686/__init__.py']
graphs/check_bipartite_graph_bfs.py,"['graphs/breadth_first_search.py', 'graphs/breadth_first_search_2.py']"
audio_filters/__init__.py,"['audio_filters/butterworth_filter.py', 'audio_filters/iir_filter.py', 'audio_filters/show_response.py']"
audio_filters/butterworth_filter.py,"['audio_filters/__init__.py', 'audio_filters/iir_filter.py', 'audio_filters/show_response.py']"
audio_filters/iir_filter.py,"['audio_filters/__init__.py', 'audio_filters/butterworth_filter.py', 'audio_filters/show_response.py']"
audio_filters/show_response.py,"['audio_filters/__init__.py', 'audio_filters/butterworth_filter.py', 'audio_filters/iir_filter.py']"
digital_image_processing/morphological_operations/dilation_operation.py,"['digital_image_processing/morphological_operations/erosion_operation.py', 'digital_image_processing/morphological_operations/erosion_operation.py']"
digital_image_processing/morphological_operations/erosion_operation.py,"['digital_image_processing/morphological_operations/dilation_operation.py', 'digital_image_processing/morphological_operations/dilation_operation.py']"
project_euler/problem_145/__init__.py,['project_euler/problem_145/sol1.py']
project_euler/problem_145/sol1.py,['project_euler/problem_145/__init__.py']
project_euler/problem_092/__init__.py,['project_euler/problem_092/sol1.py']
project_euler/problem_092/sol1.py,['project_euler/problem_092/__init__.py']
maths/series/arithmetic.py,"['maths/series/geometric.py', 'maths/series/harmonic.py']"
maths/series/geometric.py,"['maths/series/arithmetic.py', 'maths/series/harmonic.py']"
maths/series/harmonic.py,"['maths/series/arithmetic.py', 'maths/series/geometric.py']"
bit_manipulation/binary_and_operator.py,"['bit_manipulation/binary_or_operator.py', 'bit_manipulation/binary_xor_operator.py', 'sorts/bead_sort.py', 'sorts/double_sort.py', 'bit_manipulation/binary_or_operator.py', 'bit_manipulation/binary_xor_operator.py', 'bit_manipulation/single_bit_manipulation_operations.py']"
bit_manipulation/binary_or_operator.py,"['bit_manipulation/binary_and_operator.py', 'bit_manipulation/binary_xor_operator.py', 'sorts/bead_sort.py', 'sorts/double_sort.py', 'bit_manipulation/binary_and_operator.py', 'bit_manipulation/binary_xor_operator.py', 'bit_manipulation/single_bit_manipulation_operations.py']"
bit_manipulation/binary_xor_operator.py,"['bit_manipulation/binary_and_operator.py', 'bit_manipulation/binary_or_operator.py', 'sorts/bead_sort.py', 'sorts/double_sort.py', 'bit_manipulation/binary_and_operator.py', 'bit_manipulation/binary_or_operator.py', 'bit_manipulation/single_bit_manipulation_operations.py']"
sorts/bead_sort.py,"['bit_manipulation/binary_and_operator.py', 'bit_manipulation/binary_or_operator.py', 'bit_manipulation/binary_xor_operator.py', 'sorts/double_sort.py', 'sorts/odd_even_transposition_single_threaded.py', 'sorts/topological_sort.py', 'strings/prefix_function.py']"
sorts/double_sort.py,"['bit_manipulation/binary_and_operator.py', 'bit_manipulation/binary_or_operator.py', 'bit_manipulation/binary_xor_operator.py', 'sorts/bead_sort.py']"
sorts/odd_even_transposition_single_threaded.py,"['sorts/bead_sort.py', 'sorts/topological_sort.py', 'strings/prefix_function.py']"
sorts/topological_sort.py,"['sorts/bead_sort.py', 'sorts/odd_even_transposition_single_threaded.py', 'strings/prefix_function.py']"
strings/prefix_function.py,"['sorts/bead_sort.py', 'sorts/odd_even_transposition_single_threaded.py', 'sorts/topological_sort.py']"
maths/find_max.py,"['maths/find_max_recursion.py', 'maths/find_min.py', 'maths/find_min_recursion.py']"
maths/find_max_recursion.py,"['maths/find_max.py', 'maths/find_min.py', 'maths/find_min_recursion.py']"
maths/find_min.py,"['maths/find_max.py', 'maths/find_max_recursion.py', 'maths/find_min_recursion.py']"
maths/find_min_recursion.py,"['maths/find_max.py', 'maths/find_max_recursion.py', 'maths/find_min.py']"
maths/abs_max.py,['maths/abs_min.py']
maths/abs_min.py,['maths/abs_max.py']
ciphers/a1z26.py,"['ciphers/enigma_machine2.py', 'ciphers/trafid_cipher.py', 'ciphers/xor_cipher.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py']"
ciphers/enigma_machine2.py,"['ciphers/a1z26.py', 'ciphers/trafid_cipher.py', 'ciphers/xor_cipher.py', 'ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/rsa_key_generator.py']"
ciphers/trafid_cipher.py,"['ciphers/a1z26.py', 'ciphers/enigma_machine2.py', 'ciphers/xor_cipher.py', 'ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/xor_cipher.py,"['ciphers/a1z26.py', 'ciphers/enigma_machine2.py', 'ciphers/trafid_cipher.py', 'ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/simple_substitution_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/caesar_cipher.py', 'hashes/sha1.py']"
project_euler/problem_003/sol1.py,"['project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_003/sol3.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_007/sol2.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_008/sol2.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_009/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_014/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_025/sol2.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_026/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_037/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_044/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_046/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_051/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_074/sol2.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_080/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_099/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_101/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py', 'project_euler/problem_101/__init__.py']"
project_euler/problem_188/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py', 'project_euler/problem_188/__init__.py']"
project_euler/problem_191/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_551/sol1.py']"
project_euler/problem_207/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_551/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_551/sol1.py,"['project_euler/problem_003/sol1.py', 'project_euler/problem_003/sol3.py', 'project_euler/problem_007/sol2.py', 'project_euler/problem_008/sol2.py', 'project_euler/problem_009/sol1.py', 'project_euler/problem_014/sol1.py', 'project_euler/problem_025/sol2.py', 'project_euler/problem_026/sol1.py', 'project_euler/problem_037/sol1.py', 'project_euler/problem_044/sol1.py', 'project_euler/problem_046/sol1.py', 'project_euler/problem_051/sol1.py', 'project_euler/problem_074/sol2.py', 'project_euler/problem_080/sol1.py', 'project_euler/problem_099/sol1.py', 'project_euler/problem_101/sol1.py', 'project_euler/problem_188/sol1.py', 'project_euler/problem_191/sol1.py', 'project_euler/problem_207/sol1.py']"
other/linear_congruential_generator.py,['quantum/ripple_adder_classic.py']
quantum/ripple_adder_classic.py,"['other/linear_congruential_generator.py', 'divide_and_conquer/max_difference_pair.py', 'divide_and_conquer/strassen_matrix_multiplication.py', 'electronics/electric_power.py', 'electronics/ohms_law.py', 'file_transfer/receive_file.py', 'file_transfer/send_file.py']"
graphs/eulerian_path_and_circuit_for_undirected_graph.py,"['graphs/frequent_pattern_graph_miner.py', 'maths/radix2_fft.py']"
graphs/frequent_pattern_graph_miner.py,"['graphs/eulerian_path_and_circuit_for_undirected_graph.py', 'maths/radix2_fft.py', 'graphs/markov_chain.py']"
maths/radix2_fft.py,"['graphs/eulerian_path_and_circuit_for_undirected_graph.py', 'graphs/frequent_pattern_graph_miner.py']"
dynamic_programming/fractional_knapsack_2.py,"['dynamic_programming/knapsack.py', 'dynamic_programming/longest_increasing_subsequence.py']"
dynamic_programming/knapsack.py,"['dynamic_programming/fractional_knapsack_2.py', 'dynamic_programming/longest_increasing_subsequence.py']"
dynamic_programming/longest_increasing_subsequence.py,"['dynamic_programming/fractional_knapsack_2.py', 'dynamic_programming/knapsack.py']"
matrix/nth_fibonacci_using_matrix_exponentiation.py,"['matrix/spiral_print.py', 'other/fischer_yates_shuffle.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
matrix/spiral_print.py,"['matrix/nth_fibonacci_using_matrix_exponentiation.py', 'other/fischer_yates_shuffle.py']"
other/fischer_yates_shuffle.py,"['matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/spiral_print.py']"
strings/aho_corasick.py,"['strings/manacher.py', 'strings/min_cost_string_conversion.py']"
strings/manacher.py,"['strings/aho_corasick.py', 'strings/min_cost_string_conversion.py']"
strings/min_cost_string_conversion.py,"['strings/aho_corasick.py', 'strings/manacher.py']"
strings/can_string_be_rearranged_as_palindrome.py,"['strings/levenshtein_distance.py', 'strings/word_occurrence.py', 'strings/word_patterns.py']"
strings/levenshtein_distance.py,"['strings/can_string_be_rearranged_as_palindrome.py', 'strings/word_occurrence.py', 'strings/word_patterns.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py']"
strings/word_occurrence.py,"['strings/can_string_be_rearranged_as_palindrome.py', 'strings/levenshtein_distance.py', 'strings/word_patterns.py']"
strings/word_patterns.py,"['strings/can_string_be_rearranged_as_palindrome.py', 'strings/levenshtein_distance.py', 'strings/word_occurrence.py', 'strings/autocomplete_using_trie.py', 'strings/detecting_english_programmatically.py', 'strings/frequency_finder.py', 'strings/palindrome.py']"
graphs/markov_chain.py,"['graphs/frequent_pattern_graph_miner.py', 'cellular_automata/game_of_life.py']"
maths/armstrong_numbers.py,"['maths/average_median.py', 'maths/series/harmonic_series.py']"
maths/average_median.py,"['maths/armstrong_numbers.py', 'maths/series/harmonic_series.py']"
maths/series/harmonic_series.py,"['maths/armstrong_numbers.py', 'maths/average_median.py']"
maths/greedy_coin_change.py,"['maths/triplet_sum.py', 'maths/two_sum.py']"
maths/triplet_sum.py,"['maths/greedy_coin_change.py', 'maths/two_sum.py', 'maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/two_sum.py,"['maths/greedy_coin_change.py', 'maths/triplet_sum.py', 'maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_pointer.py']"
graphs/minimum_spanning_tree_kruskal.py,['graphs/tests/test_min_spanning_tree_kruskal.py']
graphs/tests/test_min_spanning_tree_kruskal.py,['graphs/minimum_spanning_tree_kruskal.py']
graphs/depth_first_search.py,['graphs/breadth_first_search.py']
computer_vision/harris_corner.py,['computer_vision/mean_threshold.py']
computer_vision/mean_threshold.py,['computer_vision/harris_corner.py']
data_structures/stacks/evaluate_postfix_notations.py,"['data_structures/stacks/linked_stack.py', 'data_structures/stacks/stack.py']"
data_structures/stacks/linked_stack.py,"['data_structures/stacks/evaluate_postfix_notations.py', 'data_structures/stacks/stack.py']"
data_structures/heap/heap.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
data_structures/heap/max_heap.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py']"
data_structures/linked_list/deque_doubly.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
digital_image_processing/sepia.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py']"
hashes/md5.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py']"
machine_learning/linear_discriminant_analysis.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py']"
machine_learning/linear_regression.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'maths/monte_carlo_dice.py', 'other/least_recently_used.py']"
maths/monte_carlo_dice.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'other/least_recently_used.py']"
other/least_recently_used.py,"['data_structures/binary_tree/binary_search_tree.py', 'data_structures/heap/heap.py', 'data_structures/heap/max_heap.py', 'data_structures/linked_list/deque_doubly.py', 'data_structures/stacks/stack.py', 'digital_image_processing/sepia.py', 'hashes/md5.py', 'machine_learning/linear_discriminant_analysis.py', 'machine_learning/linear_regression.py', 'maths/monte_carlo_dice.py']"
scripts/validate_filenames.py,['scripts/validate_solutions.py']
scripts/validate_solutions.py,"['scripts/validate_filenames.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'data_structures/binary_tree/wavelet_tree.py']"
linear_algebra/src/conjugate_gradient.py,"['linear_algebra/src/lib.py', 'linear_algebra/src/polynom_for_points.py', 'linear_algebra/src/power_iteration.py', 'linear_algebra/src/rayleigh_quotient.py', 'linear_algebra/src/test_linear_algebra.py', 'linear_algebra/src/transformations_2d.py']"
linear_algebra/src/polynom_for_points.py,"['linear_algebra/src/conjugate_gradient.py', 'linear_algebra/src/lib.py', 'linear_algebra/src/power_iteration.py', 'linear_algebra/src/rayleigh_quotient.py', 'linear_algebra/src/test_linear_algebra.py', 'linear_algebra/src/transformations_2d.py']"
linear_algebra/src/power_iteration.py,"['linear_algebra/src/conjugate_gradient.py', 'linear_algebra/src/lib.py', 'linear_algebra/src/polynom_for_points.py', 'linear_algebra/src/rayleigh_quotient.py', 'linear_algebra/src/test_linear_algebra.py', 'linear_algebra/src/transformations_2d.py']"
linear_algebra/src/rayleigh_quotient.py,"['linear_algebra/src/conjugate_gradient.py', 'linear_algebra/src/lib.py', 'linear_algebra/src/polynom_for_points.py', 'linear_algebra/src/power_iteration.py', 'linear_algebra/src/test_linear_algebra.py', 'linear_algebra/src/transformations_2d.py']"
linear_algebra/src/transformations_2d.py,"['linear_algebra/src/conjugate_gradient.py', 'linear_algebra/src/lib.py', 'linear_algebra/src/polynom_for_points.py', 'linear_algebra/src/power_iteration.py', 'linear_algebra/src/rayleigh_quotient.py', 'linear_algebra/src/test_linear_algebra.py']"
conversions/binary_to_octal.py,"['conversions/decimal_to_binary.py', 'conversions/decimal_to_hexadecimal.py', 'conversions/decimal_to_octal.py', 'conversions/prefix_conversions.py', 'conversions/weight_conversion.py']"
conversions/decimal_to_binary.py,"['conversions/binary_to_octal.py', 'conversions/decimal_to_hexadecimal.py', 'conversions/decimal_to_octal.py', 'conversions/prefix_conversions.py', 'conversions/weight_conversion.py']"
conversions/decimal_to_hexadecimal.py,"['conversions/binary_to_octal.py', 'conversions/decimal_to_binary.py', 'conversions/decimal_to_octal.py', 'conversions/prefix_conversions.py', 'conversions/weight_conversion.py']"
conversions/decimal_to_octal.py,"['conversions/binary_to_octal.py', 'conversions/decimal_to_binary.py', 'conversions/decimal_to_hexadecimal.py', 'conversions/prefix_conversions.py', 'conversions/weight_conversion.py']"
conversions/prefix_conversions.py,"['conversions/binary_to_octal.py', 'conversions/decimal_to_binary.py', 'conversions/decimal_to_hexadecimal.py', 'conversions/decimal_to_octal.py', 'conversions/weight_conversion.py']"
conversions/weight_conversion.py,"['conversions/binary_to_octal.py', 'conversions/decimal_to_binary.py', 'conversions/decimal_to_hexadecimal.py', 'conversions/decimal_to_octal.py', 'conversions/prefix_conversions.py']"
ciphers/diffie_hellman.py,"['ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/hill_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'machine_learning/forecasting/run.py', 'web_programming/instagram_crawler.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/mixed_keyword_cypher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/mono_alphabetic_ciphers.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/morse_code_implementation.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/onepad_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/playfair_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/porta_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/rail_fence_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/rot13.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/rsa_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/rsa_factorization.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/shuffled_shift_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/simple_keyword_cypher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/simple_substitution_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/transposition_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/transposition_cipher_encrypt_decrypt_file.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/vigenere_cipher.py,"['ciphers/diffie_hellman.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/mono_alphabetic_ciphers.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rail_fence_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/shuffled_shift_cipher.py', 'ciphers/simple_keyword_cypher.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/transposition_cipher_encrypt_decrypt_file.py', 'ciphers/xor_cipher.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/xor_cipher.py']"
hashes/adler32.py,"['hashes/chaos_machine.py', 'hashes/enigma_machine.py', 'hashes/sdbm.py']"
hashes/chaos_machine.py,"['hashes/adler32.py', 'hashes/enigma_machine.py', 'hashes/sdbm.py']"
hashes/enigma_machine.py,"['hashes/adler32.py', 'hashes/chaos_machine.py', 'hashes/sdbm.py']"
hashes/sdbm.py,"['hashes/adler32.py', 'hashes/chaos_machine.py', 'hashes/enigma_machine.py']"
arithmetic_analysis/gaussian_elimination.py,['arithmetic_analysis/in_static_equilibrium.py']
web_programming/currency_converter.py,['web_programming/emails_from_url.py']
web_programming/emails_from_url.py,['web_programming/currency_converter.py']
machine_learning/forecasting/run.py,"['machine_learning/k_means_clust.py', 'machine_learning/word_frequency_functions.py', 'neural_network/perceptron.py', 'traversals/binary_tree_traversals.py', 'ciphers/hill_cipher.py', 'web_programming/instagram_crawler.py', 'machine_learning/forecasting/__init__.py']"
machine_learning/k_means_clust.py,"['machine_learning/forecasting/run.py', 'machine_learning/word_frequency_functions.py', 'neural_network/perceptron.py', 'traversals/binary_tree_traversals.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
machine_learning/word_frequency_functions.py,"['machine_learning/forecasting/run.py', 'machine_learning/k_means_clust.py', 'neural_network/perceptron.py', 'traversals/binary_tree_traversals.py']"
neural_network/perceptron.py,"['machine_learning/forecasting/run.py', 'machine_learning/k_means_clust.py', 'machine_learning/word_frequency_functions.py', 'traversals/binary_tree_traversals.py']"
traversals/binary_tree_traversals.py,"['machine_learning/forecasting/run.py', 'machine_learning/k_means_clust.py', 'machine_learning/word_frequency_functions.py', 'neural_network/perceptron.py']"
divide_and_conquer/max_difference_pair.py,"['divide_and_conquer/strassen_matrix_multiplication.py', 'electronics/electric_power.py', 'electronics/ohms_law.py', 'file_transfer/receive_file.py', 'file_transfer/send_file.py', 'quantum/ripple_adder_classic.py']"
divide_and_conquer/strassen_matrix_multiplication.py,"['divide_and_conquer/max_difference_pair.py', 'electronics/electric_power.py', 'electronics/ohms_law.py', 'file_transfer/receive_file.py', 'file_transfer/send_file.py', 'quantum/ripple_adder_classic.py']"
electronics/electric_power.py,"['divide_and_conquer/max_difference_pair.py', 'divide_and_conquer/strassen_matrix_multiplication.py', 'electronics/ohms_law.py', 'file_transfer/receive_file.py', 'file_transfer/send_file.py', 'quantum/ripple_adder_classic.py', 'electronics/ohms_law.py']"
electronics/ohms_law.py,"['divide_and_conquer/max_difference_pair.py', 'divide_and_conquer/strassen_matrix_multiplication.py', 'electronics/electric_power.py', 'file_transfer/receive_file.py', 'file_transfer/send_file.py', 'quantum/ripple_adder_classic.py', 'electronics/electric_power.py']"
file_transfer/receive_file.py,"['divide_and_conquer/max_difference_pair.py', 'divide_and_conquer/strassen_matrix_multiplication.py', 'electronics/electric_power.py', 'electronics/ohms_law.py', 'file_transfer/send_file.py', 'quantum/ripple_adder_classic.py']"
file_transfer/send_file.py,"['divide_and_conquer/max_difference_pair.py', 'divide_and_conquer/strassen_matrix_multiplication.py', 'electronics/electric_power.py', 'electronics/ohms_law.py', 'file_transfer/receive_file.py', 'quantum/ripple_adder_classic.py']"
neural_network/2_hidden_layers_neural_network.py,['compression/lempel_ziv.py']
cellular_automata/game_of_life.py,['graphs/markov_chain.py']
maths/binary_exponentiation_2.py,"['maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/binary_exponentiation_3.py,"['maths/binary_exponentiation_2.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/euclidean_gcd.py,"['maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/integration_by_simpson_approx.py,"['maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/largest_subarray_sum.py,"['maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/max_sum_sliding_window.py,"['maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/median_of_two_arrays.py,"['maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/primelib.py,"['maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/triplet_sum.py', 'maths/two_pointer.py', 'maths/two_sum.py']"
maths/two_pointer.py,"['maths/binary_exponentiation_2.py', 'maths/binary_exponentiation_3.py', 'maths/euclidean_gcd.py', 'maths/integration_by_simpson_approx.py', 'maths/largest_subarray_sum.py', 'maths/max_sum_sliding_window.py', 'maths/median_of_two_arrays.py', 'maths/primelib.py', 'maths/triplet_sum.py', 'maths/two_sum.py']"
strings/autocomplete_using_trie.py,"['strings/detecting_english_programmatically.py', 'strings/frequency_finder.py', 'strings/palindrome.py', 'strings/word_patterns.py']"
strings/detecting_english_programmatically.py,"['strings/autocomplete_using_trie.py', 'strings/frequency_finder.py', 'strings/palindrome.py', 'strings/word_patterns.py']"
strings/frequency_finder.py,"['strings/autocomplete_using_trie.py', 'strings/detecting_english_programmatically.py', 'strings/palindrome.py', 'strings/word_patterns.py']"
strings/palindrome.py,"['strings/autocomplete_using_trie.py', 'strings/detecting_english_programmatically.py', 'strings/frequency_finder.py', 'strings/word_patterns.py']"
project_euler/problem_144/__init__.py,['project_euler/problem_144/sol1.py']
project_euler/problem_144/sol1.py,['project_euler/problem_144/__init__.py']
ciphers/affine_cipher.py,"['ciphers/a1z26.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/atbash.py,"['ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py']"
ciphers/base32.py,"['ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py']"
ciphers/beaufort_cipher.py,"['ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py']"
ciphers/brute_force_caesar_cipher.py,"['ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/cryptomath_module.py,"['ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/diffie.py,"['ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/elgamal_key_generator.py,"['ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_key_generator.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/rsa_key_generator.py,"['ciphers/a1z26.py', 'ciphers/affine_cipher.py', 'ciphers/atbash.py', 'ciphers/base32.py', 'ciphers/base85.py', 'ciphers/beaufort_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/enigma_machine2.py', 'ciphers/rsa_cipher.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py', 'boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
fractals/koch_snowflake.py,"['fractals/mandelbrot.py', 'fractals/sierpinski_triangle.py']"
fractals/sierpinski_triangle.py,"['fractals/koch_snowflake.py', 'fractals/mandelbrot.py']"
machine_learning/k_nearest_neighbours.py,"['maths/polynomial_evaluation.py', 'searches/hill_climbing.py']"
maths/polynomial_evaluation.py,"['machine_learning/k_nearest_neighbours.py', 'searches/hill_climbing.py']"
searches/hill_climbing.py,"['machine_learning/k_nearest_neighbours.py', 'maths/polynomial_evaluation.py']"
data_structures/binary_tree/wavelet_tree.py,"['ciphers/decrypt_caesar_with_chi_squared.py', 'scripts/validate_solutions.py']"
project_euler/problem_121/__init__.py,['project_euler/problem_121/sol1.py']
project_euler/problem_121/sol1.py,['project_euler/problem_121/__init__.py']
cellular_automata/conways_game_of_life.py,"['cellular_automata/one_dimensional.py', 'cellular_automata/one_dimensional.py', 'maths/euler_method.py', 'other/activity_selection.py', 'other/graham_scan.py', 'graphs/a_star.py', 'maths/check_polygon.py', 'graphs/boruvka.py', 'dynamic_programming/integer_partition.py', 'cellular_automata/one_dimensional.py']"
cellular_automata/one_dimensional.py,"['cellular_automata/conways_game_of_life.py', 'cellular_automata/conways_game_of_life.py', 'maths/euler_method.py', 'other/activity_selection.py', 'other/graham_scan.py', 'graphs/a_star.py', 'maths/check_polygon.py', 'graphs/boruvka.py', 'dynamic_programming/integer_partition.py', 'cellular_automata/conways_game_of_life.py']"
sorts/bucket_sort.py,"['sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/quick_sort.py', 'data_structures/binary_tree/binary_search_tree_recursive.py', 'data_structures/binary_tree/lazy_segment_tree.py', 'data_structures/binary_tree/treap.py']"
sorts/cocktail_shaker_sort.py,"['sorts/bucket_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/bucket_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/quick_sort.py', 'data_structures/binary_tree/binary_search_tree_recursive.py', 'data_structures/binary_tree/lazy_segment_tree.py', 'data_structures/binary_tree/treap.py']"
sorts/patience_sort.py,"['sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/quick_sort.py', 'data_structures/binary_tree/binary_search_tree_recursive.py', 'data_structures/binary_tree/lazy_segment_tree.py', 'data_structures/binary_tree/treap.py']"
sorts/radix_sort.py,"['sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/quick_sort.py', 'data_structures/binary_tree/binary_search_tree_recursive.py', 'data_structures/binary_tree/lazy_segment_tree.py', 'data_structures/binary_tree/treap.py']"
sorts/recursive_insertion_sort.py,"['sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/quick_sort.py', 'data_structures/binary_tree/binary_search_tree_recursive.py', 'data_structures/binary_tree/lazy_segment_tree.py', 'data_structures/binary_tree/treap.py']"
matrix/rotate_matrix.py,['matrix/tests/test_matrix_operation.py']
matrix/tests/test_matrix_operation.py,['matrix/rotate_matrix.py']
data_structures/binary_tree/non_recursive_segment_tree.py,"['ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
data_structures/binary_tree/red_black_tree.py,"['ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
dynamic_programming/climbing_stairs.py,"['ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
dynamic_programming/iterating_through_submasks.py,"['ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
machine_learning/knn_sklearn.py,"['ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
maths/3n_plus_1.py,"['ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
maths/quadratic_equations_complex_numbers.py,"['ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'matrix/sherman_morrison.py', 'strings/levenshtein_distance.py']"
matrix/sherman_morrison.py,"['ciphers/rsa_cipher.py', 'ciphers/rsa_key_generator.py', 'compression/burrows_wheeler.py', 'data_structures/binary_tree/non_recursive_segment_tree.py', 'data_structures/binary_tree/red_black_tree.py', 'data_structures/linked_list/deque_doubly.py', 'dynamic_programming/climbing_stairs.py', 'dynamic_programming/iterating_through_submasks.py', 'machine_learning/knn_sklearn.py', 'maths/3n_plus_1.py', 'maths/quadratic_equations_complex_numbers.py', 'matrix/nth_fibonacci_using_matrix_exponentiation.py', 'strings/levenshtein_distance.py']"
sorts/quick_sort.py,"['sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'data_structures/binary_tree/binary_search_tree_recursive.py', 'data_structures/binary_tree/lazy_segment_tree.py', 'data_structures/binary_tree/treap.py']"
data_structures/binary_tree/binary_search_tree_recursive.py,"['sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/quick_sort.py', 'data_structures/binary_tree/lazy_segment_tree.py', 'data_structures/binary_tree/treap.py']"
data_structures/binary_tree/lazy_segment_tree.py,"['sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/quick_sort.py', 'data_structures/binary_tree/binary_search_tree_recursive.py', 'data_structures/binary_tree/treap.py']"
data_structures/binary_tree/treap.py,"['sorts/bucket_sort.py', 'sorts/cocktail_shaker_sort.py', 'sorts/patience_sort.py', 'sorts/radix_sort.py', 'sorts/recursive_insertion_sort.py', 'sorts/quick_sort.py', 'data_structures/binary_tree/binary_search_tree_recursive.py', 'data_structures/binary_tree/lazy_segment_tree.py']"
project_euler/problem_109/__init__.py,['project_euler/problem_109/sol1.py']
project_euler/problem_109/sol1.py,['project_euler/problem_109/__init__.py']
scheduling/first_come_first_served.py,"['scheduling/round_robin.py', 'scheduling/shortest_job_first.py']"
scheduling/round_robin.py,"['scheduling/first_come_first_served.py', 'scheduling/shortest_job_first.py']"
scheduling/shortest_job_first.py,"['scheduling/first_come_first_served.py', 'scheduling/round_robin.py']"
bit_manipulation/binary_shifts.py,['bit_manipulation/binary_twos_complement.py']
bit_manipulation/binary_twos_complement.py,['bit_manipulation/binary_shifts.py']
project_euler/problem_107/__init__.py,['project_euler/problem_107/sol1.py']
project_euler/problem_107/sol1.py,['project_euler/problem_107/__init__.py']
bit_manipulation/single_bit_manipulation_operations.py,"['bit_manipulation/binary_and_operator.py', 'bit_manipulation/binary_or_operator.py', 'bit_manipulation/binary_xor_operator.py']"
backtracking/all_subsequences.py,"['backtracking/coloring.py', 'backtracking/hamiltonian_cycle.py', 'backtracking/knight_tour.py', 'backtracking/minimax.py', 'backtracking/n_queens_math.py', 'backtracking/sudoku.py']"
backtracking/coloring.py,"['backtracking/all_subsequences.py', 'backtracking/hamiltonian_cycle.py', 'backtracking/knight_tour.py', 'backtracking/minimax.py', 'backtracking/n_queens_math.py', 'backtracking/sudoku.py']"
backtracking/hamiltonian_cycle.py,"['backtracking/all_subsequences.py', 'backtracking/coloring.py', 'backtracking/knight_tour.py', 'backtracking/minimax.py', 'backtracking/n_queens_math.py', 'backtracking/sudoku.py']"
backtracking/knight_tour.py,"['backtracking/all_subsequences.py', 'backtracking/coloring.py', 'backtracking/hamiltonian_cycle.py', 'backtracking/minimax.py', 'backtracking/n_queens_math.py', 'backtracking/sudoku.py']"
backtracking/minimax.py,"['backtracking/all_subsequences.py', 'backtracking/coloring.py', 'backtracking/hamiltonian_cycle.py', 'backtracking/knight_tour.py', 'backtracking/n_queens_math.py', 'backtracking/sudoku.py']"
backtracking/n_queens_math.py,"['backtracking/all_subsequences.py', 'backtracking/coloring.py', 'backtracking/hamiltonian_cycle.py', 'backtracking/knight_tour.py', 'backtracking/minimax.py', 'backtracking/sudoku.py']"
backtracking/sudoku.py,"['backtracking/all_subsequences.py', 'backtracking/coloring.py', 'backtracking/hamiltonian_cycle.py', 'backtracking/knight_tour.py', 'backtracking/minimax.py', 'backtracking/n_queens_math.py']"
arithmetic_analysis/lu_decomposition.py,"['arithmetic_analysis/in_static_equilibrium.py', 'arithmetic_analysis/newton_forward_interpolation.py', 'arithmetic_analysis/newton_raphson.py', 'arithmetic_analysis/secant_method.py']"
arithmetic_analysis/newton_forward_interpolation.py,"['arithmetic_analysis/in_static_equilibrium.py', 'arithmetic_analysis/lu_decomposition.py', 'arithmetic_analysis/newton_raphson.py', 'arithmetic_analysis/secant_method.py']"
arithmetic_analysis/newton_raphson.py,"['arithmetic_analysis/in_static_equilibrium.py', 'arithmetic_analysis/lu_decomposition.py', 'arithmetic_analysis/newton_forward_interpolation.py', 'arithmetic_analysis/secant_method.py']"
arithmetic_analysis/secant_method.py,"['arithmetic_analysis/in_static_equilibrium.py', 'arithmetic_analysis/lu_decomposition.py', 'arithmetic_analysis/newton_forward_interpolation.py', 'arithmetic_analysis/newton_raphson.py']"
maths/euler_method.py,"['other/activity_selection.py', 'other/graham_scan.py', 'graphs/a_star.py', 'maths/check_polygon.py', 'graphs/boruvka.py', 'dynamic_programming/integer_partition.py', 'cellular_automata/conways_game_of_life.py', 'cellular_automata/one_dimensional.py']"
other/activity_selection.py,"['maths/euler_method.py', 'other/graham_scan.py', 'graphs/a_star.py', 'maths/check_polygon.py', 'graphs/boruvka.py', 'dynamic_programming/integer_partition.py', 'cellular_automata/conways_game_of_life.py', 'cellular_automata/one_dimensional.py']"
other/graham_scan.py,"['maths/euler_method.py', 'other/activity_selection.py', 'graphs/a_star.py', 'maths/check_polygon.py', 'graphs/boruvka.py', 'dynamic_programming/integer_partition.py', 'cellular_automata/conways_game_of_life.py', 'cellular_automata/one_dimensional.py']"
graphs/a_star.py,"['maths/euler_method.py', 'other/activity_selection.py', 'other/graham_scan.py', 'maths/check_polygon.py', 'graphs/boruvka.py', 'dynamic_programming/integer_partition.py', 'cellular_automata/conways_game_of_life.py', 'cellular_automata/one_dimensional.py']"
maths/check_polygon.py,"['maths/euler_method.py', 'other/activity_selection.py', 'other/graham_scan.py', 'graphs/a_star.py', 'graphs/boruvka.py', 'dynamic_programming/integer_partition.py', 'cellular_automata/conways_game_of_life.py', 'cellular_automata/one_dimensional.py']"
graphs/boruvka.py,"['maths/euler_method.py', 'other/activity_selection.py', 'other/graham_scan.py', 'graphs/a_star.py', 'maths/check_polygon.py', 'dynamic_programming/integer_partition.py', 'cellular_automata/conways_game_of_life.py', 'cellular_automata/one_dimensional.py']"
dynamic_programming/integer_partition.py,"['maths/euler_method.py', 'other/activity_selection.py', 'other/graham_scan.py', 'graphs/a_star.py', 'maths/check_polygon.py', 'graphs/boruvka.py', 'cellular_automata/conways_game_of_life.py', 'cellular_automata/one_dimensional.py']"
project_euler/problem_102/__init__.py,['project_euler/problem_102/sol1.py']
project_euler/problem_102/sol1.py,['project_euler/problem_102/__init__.py']
project_euler/problem_135/__init__.py,['project_euler/problem_135/sol1.py']
project_euler/problem_135/sol1.py,['project_euler/problem_135/__init__.py']
project_euler/problem_101/__init__.py,['project_euler/problem_101/sol1.py']
project_euler/problem_059/__init__.py,['project_euler/problem_059/sol1.py']
project_euler/problem_059/sol1.py,['project_euler/problem_059/__init__.py']
project_euler/problem_086/__init__.py,['project_euler/problem_086/sol1.py']
project_euler/problem_086/sol1.py,['project_euler/problem_086/__init__.py']
project_euler/problem_085/__init__.py,['project_euler/problem_085/sol1.py']
project_euler/problem_085/sol1.py,['project_euler/problem_085/__init__.py']
project_euler/problem_180/__init__.py,['project_euler/problem_180/sol1.py']
project_euler/problem_180/sol1.py,['project_euler/problem_180/__init__.py']
blockchain/chinese_remainder_theorem.py,"['blockchain/diophantine_equation.py', 'blockchain/modular_division.py', 'blockchain/diophantine_equation.py', 'blockchain/modular_division.py']"
blockchain/diophantine_equation.py,"['blockchain/chinese_remainder_theorem.py', 'blockchain/modular_division.py', 'blockchain/chinese_remainder_theorem.py', 'blockchain/modular_division.py']"
blockchain/modular_division.py,"['blockchain/chinese_remainder_theorem.py', 'blockchain/diophantine_equation.py', 'blockchain/chinese_remainder_theorem.py', 'blockchain/diophantine_equation.py']"
backtracking/all_combinations.py,"['backtracking/all_permutations.py', 'backtracking/n_queens.py', 'backtracking/rat_in_maze.py', 'backtracking/sum_of_subsets.py', 'backtracking/all_permutations.py', 'backtracking/n_queens.py', 'backtracking/rat_in_maze.py', 'backtracking/sum_of_subsets.py']"
backtracking/all_permutations.py,"['backtracking/all_combinations.py', 'backtracking/n_queens.py', 'backtracking/rat_in_maze.py', 'backtracking/sum_of_subsets.py', 'backtracking/all_combinations.py', 'backtracking/n_queens.py', 'backtracking/rat_in_maze.py', 'backtracking/sum_of_subsets.py']"
backtracking/n_queens.py,"['backtracking/all_combinations.py', 'backtracking/all_permutations.py', 'backtracking/rat_in_maze.py', 'backtracking/sum_of_subsets.py', 'backtracking/all_combinations.py', 'backtracking/all_permutations.py', 'backtracking/rat_in_maze.py', 'backtracking/sum_of_subsets.py']"
backtracking/rat_in_maze.py,"['backtracking/all_combinations.py', 'backtracking/all_permutations.py', 'backtracking/n_queens.py', 'backtracking/sum_of_subsets.py', 'backtracking/all_combinations.py', 'backtracking/all_permutations.py', 'backtracking/n_queens.py', 'backtracking/sum_of_subsets.py']"
backtracking/sum_of_subsets.py,"['backtracking/all_combinations.py', 'backtracking/all_permutations.py', 'backtracking/n_queens.py', 'backtracking/rat_in_maze.py', 'backtracking/all_combinations.py', 'backtracking/all_permutations.py', 'backtracking/n_queens.py', 'backtracking/rat_in_maze.py']"
knapsack/greedy_knapsack.py,"['knapsack/tests/__init__.py', 'knapsack/tests/test_greedy_knapsack.py', 'knapsack/tests/test_knapsack.py']"
knapsack/tests/__init__.py,"['knapsack/greedy_knapsack.py', 'knapsack/tests/test_greedy_knapsack.py', 'knapsack/tests/test_knapsack.py']"
knapsack/tests/test_greedy_knapsack.py,"['knapsack/greedy_knapsack.py', 'knapsack/tests/__init__.py', 'knapsack/tests/test_knapsack.py']"
knapsack/tests/test_knapsack.py,"['knapsack/greedy_knapsack.py', 'knapsack/tests/__init__.py', 'knapsack/tests/test_greedy_knapsack.py']"
web_programming/fetch_github_info.py,"['web_programming/test_fetch_github_info.py', 'web_programming/test_fetch_github_info.py']"
web_programming/test_fetch_github_info.py,"['web_programming/fetch_github_info.py', 'web_programming/fetch_github_info.py']"
web_programming/instagram_crawler.py,"['ciphers/hill_cipher.py', 'machine_learning/forecasting/run.py']"
project_euler/problem_206/__init__.py,"['project_euler/problem_206/sol1.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_206/sol1.py,"['project_euler/problem_206/__init__.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
data_structures/stacks/__init__.py,['data_structures/stacks/infix_to_postfix_conversion.py']
maths/ceil.py,['maths/floor.py']
maths/floor.py,['maths/ceil.py']
project_euler/problem_064/__init__.py,['project_euler/problem_064/sol1.py']
project_euler/problem_064/sol1.py,['project_euler/problem_064/__init__.py']
compression/lempel_ziv_decompress.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
data_structures/binary_tree/segment_tree_other.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
graphs/minimum_spanning_tree_boruvka.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
machine_learning/astar.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
maths/entropy.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
maths/numerical_integration.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
project_euler/problem_013/sol1.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
project_euler/problem_018/solution.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
project_euler/problem_042/solution42.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
project_euler/problem_049/sol1.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
project_euler/problem_054/sol1.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
project_euler/problem_054/test_poker_hand.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_063/sol1.py', 'project_euler/problem_067/sol1.py']"
project_euler/problem_063/sol1.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_067/sol1.py']"
project_euler/problem_067/sol1.py,"['ciphers/simple_substitution_cipher.py', 'ciphers/xor_cipher.py', 'compression/lempel_ziv.py', 'compression/lempel_ziv_decompress.py', 'data_structures/binary_tree/segment_tree_other.py', 'data_structures/heap/heap.py', 'data_structures/linked_list/deque_doubly.py', 'graphs/minimum_spanning_tree_boruvka.py', 'machine_learning/astar.py', 'machine_learning/k_means_clust.py', 'maths/entropy.py', 'maths/numerical_integration.py', 'project_euler/problem_013/sol1.py', 'project_euler/problem_018/solution.py', 'project_euler/problem_042/solution42.py', 'project_euler/problem_049/sol1.py', 'project_euler/problem_054/sol1.py', 'project_euler/problem_054/test_poker_hand.py', 'project_euler/problem_063/sol1.py']"
project_euler/problem_058/__init__.py,['project_euler/problem_058/sol1.py']
project_euler/problem_058/sol1.py,['project_euler/problem_058/__init__.py']
project_euler/problem_207/__init__.py,"['project_euler/problem_207/sol1.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_203/__init__.py,['project_euler/problem_203/sol1.py']
project_euler/problem_203/sol1.py,['project_euler/problem_203/__init__.py']
project_euler/problem_081/__init__.py,['project_euler/problem_081/sol1.py']
project_euler/problem_081/sol1.py,['project_euler/problem_081/__init__.py']
project_euler/problem_301/__init__.py,['project_euler/problem_301/sol1.py']
project_euler/problem_301/sol1.py,['project_euler/problem_301/__init__.py']
boolean_algebra/quine_mc_cluskey.py,"['ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/base64_cipher.py,"['boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/deterministic_miller_rabin.py,"['boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rabin_miller.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
ciphers/rabin_miller.py,"['boolean_algebra/quine_mc_cluskey.py', 'ciphers/affine_cipher.py', 'ciphers/base64_cipher.py', 'ciphers/brute_force_caesar_cipher.py', 'ciphers/cryptomath_module.py', 'ciphers/decrypt_caesar_with_chi_squared.py', 'ciphers/deterministic_miller_rabin.py', 'ciphers/diffie.py', 'ciphers/elgamal_key_generator.py', 'ciphers/hill_cipher.py', 'ciphers/mixed_keyword_cypher.py', 'ciphers/morse_code_implementation.py', 'ciphers/onepad_cipher.py', 'ciphers/playfair_cipher.py', 'ciphers/porta_cipher.py', 'ciphers/rot13.py', 'ciphers/rsa_cipher.py', 'ciphers/rsa_factorization.py', 'ciphers/rsa_key_generator.py', 'ciphers/simple_substitution_cipher.py', 'ciphers/trafid_cipher.py', 'ciphers/transposition_cipher.py', 'ciphers/vigenere_cipher.py', 'ciphers/xor_cipher.py']"
project_euler/problem_057/__init__.py,['project_euler/problem_057/sol1.py']
project_euler/problem_057/sol1.py,['project_euler/problem_057/__init__.py']
project_euler/problem_077/__init__.py,"['project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_077/sol1.py']"
project_euler/problem_077/sol1.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_077/__init__.py']"
project_euler/problem_129/__init__.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_129/sol1.py']"
project_euler/problem_129/sol1.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_129/__init__.py']"
project_euler/problem_087/__init__.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_087/sol1.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_038/__init__.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_038/sol1.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_075/__init__.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_075/sol1.py']"
project_euler/problem_075/sol1.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_075/__init__.py']"
project_euler/problem_091/__init__.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_091/sol1.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_174/__init__.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_174/sol1.py']"
project_euler/problem_174/sol1.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_174/__init__.py']"
project_euler/problem_072/sol2.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_074/__init__.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_074/sol1.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_074/sol1.py,"['project_euler/problem_077/__init__.py', 'project_euler/problem_077/sol1.py', 'project_euler/problem_129/__init__.py', 'project_euler/problem_129/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_075/__init__.py', 'project_euler/problem_075/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_174/__init__.py', 'project_euler/problem_174/sol1.py', 'project_euler/problem_072/sol2.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py']"
machine_learning/forecasting/__init__.py,['machine_learning/forecasting/run.py']
project_euler/problem_123/__init__.py,"['project_euler/problem_123/sol1.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_123/sol1.py,"['project_euler/problem_123/__init__.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_070/__init__.py,"['project_euler/problem_070/sol1.py', 'project_euler/problem_070/sol1.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_070/sol1.py,"['project_euler/problem_070/__init__.py', 'project_euler/problem_070/__init__.py', 'project_euler/problem_123/__init__.py', 'project_euler/problem_123/sol1.py', 'project_euler/problem_206/__init__.py', 'project_euler/problem_206/sol1.py', 'project_euler/problem_207/__init__.py', 'project_euler/problem_207/sol1.py', 'project_euler/problem_087/__init__.py', 'project_euler/problem_087/sol1.py', 'project_euler/problem_038/__init__.py', 'project_euler/problem_038/sol1.py', 'project_euler/problem_091/__init__.py', 'project_euler/problem_091/sol1.py', 'project_euler/problem_074/__init__.py', 'project_euler/problem_074/sol1.py']"
project_euler/problem_065/__init__.py,['project_euler/problem_065/sol1.py']
project_euler/problem_065/sol1.py,['project_euler/problem_065/__init__.py']
project_euler/problem_050/__init__.py,['project_euler/problem_050/sol1.py']
project_euler/problem_050/sol1.py,['project_euler/problem_050/__init__.py']
ciphers/caesar_cipher.py,"['ciphers/xor_cipher.py', 'hashes/sha1.py']"
hashes/sha1.py,"['ciphers/caesar_cipher.py', 'ciphers/xor_cipher.py']"
project_euler/problem_089/__init__.py,['project_euler/problem_089/sol1.py']
project_euler/problem_089/sol1.py,['project_euler/problem_089/__init__.py']
project_euler/problem_188/__init__.py,['project_euler/problem_188/sol1.py']
knapsack/__init__.py,"['knapsack/knapsack.py', 'knapsack/test_knapsack.py']"
knapsack/knapsack.py,"['knapsack/__init__.py', 'knapsack/test_knapsack.py']"
knapsack/test_knapsack.py,"['knapsack/__init__.py', 'knapsack/knapsack.py']"
bit_manipulation/binary_count_setbits.py,['bit_manipulation/binary_count_trailing_zeros.py']
bit_manipulation/binary_count_trailing_zeros.py,['bit_manipulation/binary_count_setbits.py']
graphs/minimum_spanning_tree_prims.py,['graphs/tests/test_min_spanning_tree_prim.py']
graphs/tests/test_min_spanning_tree_prim.py,['graphs/minimum_spanning_tree_prims.py']
